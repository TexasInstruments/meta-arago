From 323077958301bc321d840a2c2b983ab469934753 Mon Sep 17 00:00:00 2001
From: Max Ihlenfeldt <max@igalia.com>
Date: Wed, 02 Aug 2023 15:46:56 +0000
Subject: [PATCH] ozone/wayland: Fix nullptr deref in WaylandWindowManager

When no input devices are available (e.g. embedded devices),
`connection_->window_drag_controller()` returns nullptr. Add a check to
ensure we don't accidentally dereference that.

See also https://github.com/OSSystems/meta-browser/issues/736.

Bug: 578890
Change-Id: I472d0dfabfea6b4d072ede98c8593370524f54f0
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4724882
Reviewed-by: Antonio Gomes <tonikitoo@igalia.com>
Commit-Queue: Max Ihlenfeldt <max@igalia.com>
Cr-Commit-Position: refs/heads/main@{#1178426}
---

diff --git a/ui/ozone/platform/wayland/host/wayland_window_manager.cc b/ui/ozone/platform/wayland/host/wayland_window_manager.cc
index e4a8e4541..24999725 100644
--- a/ui/ozone/platform/wayland/host/wayland_window_manager.cc
+++ b/ui/ozone/platform/wayland/host/wayland_window_manager.cc
@@ -96,15 +96,19 @@

 WaylandWindow* WaylandWindowManager::GetCurrentPointerOrTouchFocusedWindow()
     const {
-  // In case there is an ongoing window dragging session, favor the window
-  // according to the active drag source.
-  //
-  // TODO(https://crbug.com/1317063): Apply the same logic to data drag sessions
-  // too?
-  if (auto drag_source = connection_->window_drag_controller()->drag_source()) {
-    return *drag_source == mojom::DragEventSource::kMouse
-               ? GetCurrentPointerFocusedWindow()
-               : GetCurrentTouchFocusedWindow();
+  // Might be nullptr if no input devices are available.
+  if (connection_->window_drag_controller()) {
+    // In case there is an ongoing window dragging session, favor the window
+    // according to the active drag source.
+    //
+    // TODO(https://crbug.com/1317063): Apply the same logic to data drag
+    // sessions too?
+    if (auto drag_source =
+            connection_->window_drag_controller()->drag_source()) {
+      return *drag_source == mojom::DragEventSource::kMouse
+                 ? GetCurrentPointerFocusedWindow()
+                 : GetCurrentTouchFocusedWindow();
+    }
   }

   for (const auto& entry : window_map_) {
